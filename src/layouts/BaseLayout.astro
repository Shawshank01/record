---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';
import searchScript from '../scripts/search.js?url';
import { headerSubtitleOptions } from '../data/subtitles';

const {
  pageTitle = "Michifumi's Blog",
  description = "Dispatches from Michifumi's command chair.",
  searchPayload
} = Astro.props;

const searchPayloadString = searchPayload
  ? JSON.stringify(searchPayload)
      .replace(/</g, '\\u003c')
      .replace(/&/g, '\\u0026')
  : undefined;
---
<!DOCTYPE html>
<html lang="en" class="dark">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content={description} />
    <title>{pageTitle}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
    <link rel="icon" type="image/svg+xml" href="/icon.svg" />
    <link rel="alternate icon" href="/icon.svg" />
  </head>
  <body class="bg-surface text-gray-100">
    <Header
      title="Michifumi's Blog"
      subtitleOptions={headerSubtitleOptions}
    />
    <main
      class="mx-auto flex min-h-screen max-w-6xl flex-col gap-10 px-4 pb-16 md:flex-row md:px-6"
      style="padding-top: calc(var(--header-offset, 8rem) + 2rem);"
    >
      <slot />
    </main>
    <Footer />
    {
      searchPayloadString && (
        <Fragment>
          <script type="application/json" id="search-data" set:html={searchPayloadString}></script>
          <script is:inline type="module">
            const dataTag = document.getElementById('search-data');
            const searchInput = document.getElementById('blog-search');
            if (dataTag && searchInput) {
              window.__MICHIFUMI_POSTS__ = JSON.parse(dataTag.textContent || '[]');
            }

            const headerEl = document.querySelector('[data-site-header]');
            const applyOffset = () => {
              if (!headerEl) return;
              const height = headerEl.getBoundingClientRect().height;
              document.documentElement.style.setProperty('--header-offset', `${height}px`);
            };

            if (headerEl) {
              applyOffset();
              if (typeof ResizeObserver !== 'undefined') {
                const observer = new ResizeObserver(() => applyOffset());
                observer.observe(headerEl);
              }
            }

            window.addEventListener('resize', applyOffset, { passive: true });
          </script>
          <script type="module" src={searchScript}></script>
        </Fragment>
      )
    }
    <slot name="scripts" />
    <script is:inline>
      const anchors = document.querySelectorAll('a[href^="http"]');
      anchors.forEach((anchor) => {
        const url = new URL(anchor.href, window.location.origin);
        const isExternal = url.hostname !== window.location.hostname;
        if (isExternal) {
          anchor.setAttribute('target', '_blank');
          anchor.setAttribute('rel', anchor.getAttribute('rel') ? anchor.getAttribute('rel') : 'noopener');
        }
      });
    </script>
    <script is:inline>
  (() => {
    if (typeof window === 'undefined' || typeof navigator === 'undefined') return;

    const endpoint = 'https://stats.zaku.eu.org/track';
    const payload = JSON.stringify({
      path: window.location.pathname,
      referrer: document.referrer || '',
      ua: navigator.userAgent
    });

    try {
      if (navigator.sendBeacon) {
        const blob = new Blob([payload], { type: 'application/json' });
        const ok = navigator.sendBeacon(endpoint, blob);
        if (ok) return;
      }
      fetch(endpoint, {
        method: 'POST',
        body: payload,
        keepalive: true,
        mode: 'no-cors',
        headers: { 'Content-Type': 'application/json' }
      }).catch(err => console.warn('[analytics] fetch failed', err));
    } catch (err) {
      console.warn('[analytics] unexpected error', err);
    }
  })();
</script>
  </body>
</html>
