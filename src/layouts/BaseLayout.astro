---
import Header from '../components/Header.astro';
import Footer from '../components/Footer.astro';
import '../styles/global.css';

const {
  pageTitle = "Michifumi's Blog",
  description = "Dispatches from Michifumi's command chair.",
  searchPayload
} = Astro.props;

const searchPayloadString = searchPayload ? JSON.stringify(searchPayload) : undefined;
const headerSubtitleOptions = [
  "This blog is entirely produced by silicon-based slaves. I only issue commands and wield the whip.",
  "Thanks to the AI era, I too have the opportunity to become a \"slave\" driver, whipping others to work for me. Or perhaps I've merely discovered an intensely addictive method of whipping myself?"
];
---
<!DOCTYPE html>
<html lang="en" class="dark">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content={description} />
    <title>{pageTitle}</title>
    <link rel="preconnect" href="https://fonts.googleapis.com" />
    <link rel="preconnect" href="https://fonts.gstatic.com" crossorigin />
    <link
      href="https://fonts.googleapis.com/css2?family=Inter:wght@400;500;600;700&display=swap"
      rel="stylesheet"
    />
  </head>
  <body class="bg-surface text-gray-100">
    <Header
      title="Michifumi's Blog"
      subtitleOptions={headerSubtitleOptions}
    />
    <main
      class="mx-auto flex min-h-screen max-w-6xl flex-col gap-10 px-4 pb-16 md:flex-row md:px-6"
      style="padding-top: calc(var(--header-offset, 8rem) + 2rem);"
    >
      <slot />
    </main>
    <Footer />
    {
      searchPayloadString && (
        <Fragment>
          <script type="application/json" id="search-data" set:html={searchPayloadString}></script>
          <script is:inline type="module">
            const dataTag = document.getElementById('search-data');
            const searchInput = document.getElementById('blog-search');
            if (dataTag && searchInput) {
              window.__MICHIFUMI_POSTS__ = JSON.parse(dataTag.textContent || '[]');
            }

            const headerEl = document.querySelector('[data-site-header]');
            const applyOffset = () => {
              if (!headerEl) return;
              const height = headerEl.getBoundingClientRect().height;
              document.documentElement.style.setProperty('--header-offset', `${height}px`);
            };

            if (headerEl) {
              applyOffset();
              if (typeof ResizeObserver !== 'undefined') {
                const observer = new ResizeObserver(() => applyOffset());
                observer.observe(headerEl);
              }
            }

            window.addEventListener('resize', applyOffset, { passive: true });
          </script>
          <script type="module">
            import '../scripts/search.ts';
          </script>
        </Fragment>
      )
    }
    <slot name="scripts" />
    <script is:inline>
      const anchors = document.querySelectorAll('a[href^="http"]');
      anchors.forEach((anchor) => {
        const url = new URL(anchor.href, window.location.origin);
        const isExternal = url.hostname !== window.location.hostname;
        if (isExternal) {
          anchor.setAttribute('target', '_blank');
          anchor.setAttribute('rel', anchor.getAttribute('rel') ? anchor.getAttribute('rel') : 'noopener');
        }
      });
    </script>
  </body>
</html>
