---
import BaseLayout from '../../layouts/BaseLayout.astro';
import { getCollection } from 'astro:content';

export async function getStaticPaths() {
  const posts = await getCollection('blog', ({ data }) => !data.draft);
  return posts.map((post) => ({
    params: { slug: post.slug },
    props: { post }
  }));
}

const { post } = Astro.props;
const { Content } = await post.render();

const allPosts = (await getCollection('blog', ({ data }) => !data.draft)).sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

const searchPayload = allPosts.map((entry) => ({
  id: entry.id,
  slug: entry.slug,
  title: entry.data.title,
  description: entry.data.description,
  pubDate: entry.data.pubDate,
  tags: entry.data.tags,
  body: entry.body
}));

---
<BaseLayout
  pageTitle={`${post.data.title} Â· Michifumi's Blog`}
  description={post.data.description}
  searchPayload={searchPayload}
>
  <article class="prose prose-invert prose-headings:tracking-tight w-full max-w-3xl space-y-6 mx-auto">
    <header class="rounded-3xl border border-white/5 bg-soft/70 p-8 shadow-soft">
      <p class="text-xs uppercase tracking-[0.3em] text-gray-500">
        {new Date(post.data.pubDate).toLocaleDateString(undefined, {
          year: 'numeric',
          month: 'short',
          day: 'numeric'
        })}
      </p>
      <h1 class="mt-4 text-3xl font-bold text-white md:text-4xl">{post.data.title}</h1>
      <p class="mt-3 max-w-2xl text-base text-gray-300">{post.data.description}</p>
      <div class="mt-4 flex flex-wrap gap-2">
        {post.data.tags.map((tag) => (
          <span class="rounded-full border border-white/10 bg-white/5 px-3 py-1 text-xs font-medium text-gray-200">
            #{tag}
          </span>
        ))}
      </div>
    </header>
    <section class="rounded-3xl border border-white/5 bg-soft/70 p-8 shadow-soft text-base leading-relaxed text-gray-200">
      <Content />
    </section>
  </article>
</BaseLayout>
